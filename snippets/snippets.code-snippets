{
    "Function Component":{
        "prefix":"fc"
        "body":[
            "export default function ${1:${TM_FILENAME_BASE}}() {",
            "  return (",
            "    <>${1:first}</>",
            "  )",
            "}",
            ""
        ],
        "description":"Function Component",
        "scope": "typescript,typescriptreact,javascript,javascriptreact"
    },
    "React Function Component":{
        "prefix":"rfc"
        "body":[
            "import React from 'react'",
            "",
            "export default function ${1:${TM_FILENAME_BASE}}() {",
            "  return (",
            "    <>${1:first}</>",
            "  )",
            "}",
            ""
        ],
        "description":"React Function Component",
        "scope": "typescript,typescriptreact,javascript,javascriptreact"
    },
    "Next.js Api Route":{
        "prefix":"nxtapi"
        "body":[
            "import { NextResponse } from 'next/server'",
            "",
            "export function GET(){${1}}",
            "",
            "export function POST(){${2}}",
            "",
            "export function PUT(){${3}}",
            "",
            "export function DELETE(){${4}}",
        ],
        "description":"Next.js API methods with NextResponse",
        "scope": "typescript,typescriptreact,javascript,javascriptreact"
    },
    "UTF-8 Character Encoding":{
        "prefix":"utf8"
        "body":[
            "<meta charset='UTF-8'>"
             ],
        "description":"UTF 8",
        "scope": "typescript,typescriptreact,javascript,javascriptreact,html"
    },
    "React Context API":{
        "prefix":"rca"
        "body":[
            "const UserContext = createContext(undefined);",
            "",
            "function UserProvider({ children }) {",
            "return (",
            "<UserContext.Provider value={${1}}>",
            "{children}",
            "</UserContext.Provider>",
            ");",
            "}",
            "",
            "export { UserProvider, UserContext };"
             ],
        "description":"React Context API with state and provider",
        "scope": "typescript,typescriptreact,javascript,javascriptreact"
    },
    "Post Request ":{
        "prefix":"rca"
        "body":[
            "fetch('http://example.com/api/endpoint/', {",
            "method: 'post',",
            "headers: {",
            "'Content-Type': 'application/json',",
            "}",
            "body: JSON.stringify({",
            "${1}",
            "})",
            "})",
            ""
             ],
        "description":"Post Request with Fetch API",
        "scope": "typescript,typescriptreact,javascript,javascriptreact,html"
    },
    
}